name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        r-version: [3.6, 4.0]
        os: [ubuntu-latest, ubuntu-20.04, macOS-latest, windows-latest]
        include:
          - os: windows-latest
            venv_activate: source .\pyenv_base\Scripts\activate.bat
          - os: ubuntu-20.04
            venv_activate: source pyenv_base/bin/activate
          - os: ubuntu-latest
            venv_activate: source pyenv_base/bin/activate
          - os: macOS-latest
            venv_activate: source pyenv_base/bin/activate
        exclude:
            # os: windows-latest
            # python-version: 3.8
          - python-version: 3.5  
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.r-version }}
    - name: Create base virtualenv
      run: |
        python -m venv py_base_env
    - name: Install extra dependencies
      if: runner.os == 'Windows' && matrix.python-version == '3.8'
      run: |
        echo "Bug in setuptools requires update"
        ${matrix.venv_activate}
        python -m pip install --upgrade setuptools pycparser wheel
    - name: Lint with flake8
      run: |
        ${matrix.venv_activate}
        pip install flake8
        ./scripts/run_linting.sh
    - name: Install package
      run: |
        ${matrix.venv_activate}
        python setup.py install
    - name: Test with minimal dependencies
      run: |
        export LD_LIBRARY_PATH=$(python -m rpy2.situation LD_LIBRARY_PATH):${LD_LIBRARY_PATH}
        ${matrix.venv_activate}
        pip install pytest codecov pytest-cov
        bash -e ./scripts/run_test_min_deps.sh
    - name: Test with numpy
      run: |
        export LD_LIBRARY_PATH=$(python -m rpy2.situation LD_LIBRARY_PATH):${LD_LIBRARY_PATH}
        ${matrix.venv_activate}
        pip install numpy
        bash -e ./scripts/run_test_min_deps.sh
    - name: Test with pandas
      run: |
        export LD_LIBRARY_PATH=$(python -m rpy2.situation LD_LIBRARY_PATH):${LD_LIBRARY_PATH}
        ${matrix.venv_activate}
        pip install pandas
        bash -e ./scripts/run_test_min_deps.sh
    - name: Test with R deps
      run: |
        export LD_LIBRARY_PATH=$(python -m rpy2.situation LD_LIBRARY_PATH):${LD_LIBRARY_PATH}
        ${matrix.venv_activate}
        bash -e ./scripts/run_test_rdeps.sh
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      if: matrix.os == 'ubuntu-20.04' && matrix.python-version == '3.8' && matrix.r-version == '4.0'
      env:
        OS: ${{ runner.os }}
        PYTHON: ${{ matrix.python-version }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
